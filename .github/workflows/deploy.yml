name: CI/CD Pipeline for Django

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 트리거

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t wanted_market:latest .
          docker tag wanted_market:latest ${{ secrets.DOCKER_USERNAME }}/wanted_market:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/wanted_market:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # build job이 완료된 후에 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
          scp -o StrictHostKeyChecking=no -i ec2_key.pem docker-compose.yml $EC2_USER@$EC2_HOST:/home/$EC2_USER/
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker pull $DOCKER_USERNAME/my-django-app:latest
            docker-compose down
            docker-compose up -d
          EOF
